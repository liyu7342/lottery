<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fr.lottery.dao.OddsMapper">
  <resultMap id="BaseResultMap" type="com.fr.lottery.entity.Odds">
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="oddSet" jdbcType="VARCHAR" property="oddSet" />
    <result column="Type" jdbcType="VARCHAR" property="type" />
    <result column="IsDefault" jdbcType="BIT" property="isdefault" />
    <result column="NumKey" jdbcType="VARCHAR" property="numkey" />
    <result column="NumValue" jdbcType="DECIMAL" property="numvalue" />
  </resultMap>

  <sql id="Base_Column_List">
    Id,oddSet, Type, IsDefault, NumKey, NumValue
  </sql>
  <sql id="Example_Where_Clause">
    <where>

    </where>
  </sql>
  <select id="getOdds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from odds
    <where>
      <if test="isDefault !=null and isDefault !='' ">
        AND  IsDefault=#{isDefault,jdbcType=BIT}
      </if>
      <if test="type !=null and type !='' ">
        AND  Type=#{type,jdbcType=VARCHAR}
      </if>

      <if test="numkey !=null and numkey !='' ">
        AND Numkey =#{numkey,jdbcType=VARCHAR}
      </if>
      <if test="oddSet !=null and oddSet !='' ">
        AND oddSet =#{oddSet,jdbcType=VARCHAR}
      </if>
    </where>
    ORDER  BY Numkey DESC
  </select>

  <select id="getTypeOdds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from odds
    WHERE Type=#{type,jdbcType=VARCHAR} AND IsDefault =#{isDefault,jdbcType=BIT}
    ORDER  BY Numkey DESC
  </select>
  <select id="getTypeOddsList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from odds
    <where>
      <if test="oddSet !=null and oddSet !='' ">
        AND oddSet =#{oddSet,jdbcType=VARCHAR}
      </if>
      <if test="isDefault !=null and isDefault !='' ">
        AND  IsDefault=#{isDefault,jdbcType=BIT}
      </if>
      <if test="types!=null ">
        AND Type in
        <foreach item="item" index="index" collection="types" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
    ORDER  BY Numkey DESC
  </select>

  <select id="selectByExample" parameterType="com.fr.lottery.entity.Odds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from odds
    ORDER  BY ID DESC
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from odds
    where Id = #{id,jdbcType=VARCHAR}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from odds
    where Id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.fr.lottery.entity.Odds">
    insert into odds (Id,OddSet, Type, IsDefault, NumKey, NumValue)
    values (#{id,jdbcType=VARCHAR}, #{oddSet,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{isdefault,jdbcType=BIT},
      #{numkey,jdbcType=VARCHAR}, #{numvalue,jdbcType=REAL})
  </insert>

  <select id="countByExample" parameterType="com.fr.lottery.entity.Odds" resultType="java.lang.Long">
    select count(*) from odds
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKey" parameterType="com.fr.lottery.entity.Odds">
    update odds set Type=#{type,jdbcType=VARCHAR}, IsDefault= #{isdefault,jdbcType=BIT}, NumKey=#{numkey,jdbcType=VARCHAR}, NumValue=#{numvalue,jdbcType=DECIMAL}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>