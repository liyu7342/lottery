<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fr.lottery.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.fr.lottery.entity.Member">
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="AgentId" jdbcType="VARCHAR" property="agentid" />
    <result column="Credits" jdbcType="BIGINT" property="credits" />
    <result column="Proportional" jdbcType="INTEGER" property="proportional" />
    <result column="Handicap" jdbcType="VARCHAR" property="handicap" />
    <result column="Account" jdbcType="VARCHAR" property="account" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Status" jdbcType="TINYINT" property="status" />
    <result column="CreateDate" jdbcType="TIMESTAMP" property="createDate" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
        Status=1
    </where>
  </sql>
  <sql id="Base_Column_List">
     Id, AgentId, Credits, Proportional, Handicap, Account, Name, Password, Status, CreateDate
  </sql>
  <select id="selectByExample" parameterType="com.fr.lottery.entity.Member" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <include refid="Example_Where_Clause" />
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
      <include refid="Example_Where_Clause" />
    AND Id = #{id,jdbcType=VARCHAR}
  </select>
    <select id="getByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from member
        <include refid="Example_Where_Clause" />
        AND Account = #{account,jdbcType=VARCHAR}
    </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fr.lottery.entity.Member">
    delete from member
      <include refid="Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterType="com.fr.lottery.entity.Member">
    insert into member (Id, AgentId, Credits,
      Proportional, Handicap, Account,
      Name, Password, Status,
      CreateDate)
    values (#{id,jdbcType=VARCHAR}, #{agentid,jdbcType=VARCHAR}, #{credits,jdbcType=BIGINT},
      #{proportional,jdbcType=INTEGER}, #{handicap,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
      #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <select id="countByExample" parameterType="com.fr.lottery.entity.Member" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getMembersByAgentId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from member
      <include refid="Example_Where_Clause" />
    AND agentId = #{agentId,jdbcType=VARCHAR}
    <if test="pageId !=null">
      limit (pageId-1) * 10 ,10
    </if>
  </select>



  <update id="updateByPrimaryKey" parameterType="com.fr.lottery.entity.Member">
    update member
    set AgentId = #{agentid,jdbcType=VARCHAR},
      Credits = #{credits,jdbcType=BIGINT},
      Proportional = #{proportional,jdbcType=INTEGER},
      Handicap = #{handicap,jdbcType=VARCHAR},
      Account = #{account,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Status = #{status,jdbcType=TINYINT},
      CreateDate = #{createDate,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>