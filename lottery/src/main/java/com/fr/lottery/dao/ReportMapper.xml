<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fr.lottery.dao.ReportMapper">
  <resultMap id="BaseResultMap" type="com.fr.lottery.entity.Orders">
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="handicapId" jdbcType="VARCHAR" property="handicapId" />
    <result column="gameType" jdbcType="VARCHAR" property="gametype" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="odds" jdbcType="DECIMAL" property="odds" />
    <result column="retreat" jdbcType="DECIMAL" property="retreat"/>
    <result column="orderType" jdbcType="VARCHAR" property="orderType"/>
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="winAmount" jdbcType="DECIMAL" property="winAmount"/>
    <result column="canWinAmount" jdbcType="DECIMAL" property="canWinAmount"/>
    <result column="totalAmount" jdbcType="INTEGER" property="totalAmount" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="lianmatype" jdbcType="VARCHAR" property="lianmatype" />
    <result column="lianmadan" jdbcType="VARCHAR" property="lianmadan" />
    <result column="oddSet" jdbcType="DECIMAL" property="oddset" />
    <result column="IsMuti" jdbcType="BIT" property="isMuti"/>
  </resultMap>
  <sql id="Base_Column_List">
    Id,  userId,handicapId, gameType, `no`,description, odds, amount,totalAmount,retreat,IFNULL(winAmount,0) as winAmount, createdate,status,orderNo,
    lianmatype,lianmadan,IFNULL(canWinAmount,0) as canWinAmount,oddset,orderType,IsMuti
  </sql>
  <select id="selectByExample"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orders

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where Id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.fr.lottery.entity.Orders">
    insert into orders (Id,  userId,handicapId,orderType,
      gameType, no,description, odds,amount,totalAmount,retreat,winAmount, createdate,orderNo,lianmatype,lianmadan,canWinAmount,oddset
      ,IsMuti)
    values (#{id,jdbcType=VARCHAR},  #{userid,jdbcType=VARCHAR},#{handicapId,jdbcType=VARCHAR},#{orderType,jdbcType=VARCHAR},
      #{gametype,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR}, #{odds,jdbcType=DECIMAL},
      #{amount,jdbcType=INTEGER},#{totalAmount,jdbcType=INTEGER},#{retreat,jdbcType=DECIMAL},#{winAmount,jdbcType=DECIMAL}, #{createdate,jdbcType=TIMESTAMP},
      #{orderNo,jdbcType=VARCHAR},#{lianmatype,jdbcType=VARCHAR},#{lianmadan,jdbcType=VARCHAR},#{canWinAmount,jdbcType=DECIMAL},
      #{oddset,jdbcType=VARCHAR},#{isMuti,jdbcType=BIT})
  </insert>
  <select id="countByExample"  resultType="java.lang.Long">
    select count(*) from orders

  </select>

  <update id="updateByPrimaryKey" parameterType="com.fr.lottery.entity.Orders">
    update orders
    set userId = #{userid,jdbcType=VARCHAR},
      handicapId=#{handicapId,jdbcType=VARCHAR},
      gameType = #{gametype,jdbcType=VARCHAR},
      description= #{description,jdbcType=VARCHAR},
      no = #{no,jdbcType=VARCHAR},
      odds = #{odds,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=INTEGER},
      totalAmount = #{totalAamount,jdbcType=INTEGER},
      retreat = #{retreat,jdbcType=DECIMAL},
      winAmount=#{winAmount,jdbcType=DECIMAL},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateWinAmountByPrimaryKey">
    UPDATE orders set winAmount=#{winAmount,jdbcType=DECIMAL} WHERE Id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="settlement" statementType="CALLABLE" >
      Call P_DB_Settlement1(#{p_handicapId,mode=IN,jdbcType=VARCHAR})
  </update>
<select id="countByUserId" resultType="java.lang.Long">
   select count(1) from orders
   <where>
     <if test="handicapId!='' and handicapId!=null" >
       AND handicapId = #{handicapId,jdbcType=VARCHAR}
     </if>
     <if test="userid!='' and userid!=null" >
       AND userid = #{userid,jdbcType=VARCHAR}
     </if>
     <if test="gameType!='' and gameType!=null" >
       AND gameType = #{gameType,jdbcType=VARCHAR}
     </if>
   </where>
</select>

  <select id="getOrderDetails"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from orders
    <where>
      <if test="handicapId!='' and handicapId!=null" >
        AND handicapId = #{handicapId,jdbcType=VARCHAR}
      </if>
      <if test="userid!='' and userid!=null" >
        AND userid = #{userid,jdbcType=VARCHAR}
      </if>
      <if test="gameType!='' and gameType!=null" >
        AND gameType = #{gameType,jdbcType=VARCHAR}
      </if>
    </where>

    order by orderNo DESC
    <if test="pageIndex!=null ">
      limit #{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  <select id="getTotal"  resultMap="BaseResultMap">
    select sum(IFNULL(totalAmount,0)) as totalAmount,sum(IFNULL(canWinAmount,0)) as canWinAmount,sum(IFNULL(winAmount,0)) as winAmount
    from orders
    <where>
      <if test="handicapId!='' and handicapId!=null" >
        AND handicapId = #{handicapId,jdbcType=VARCHAR}
      </if>
      <if test="userid!='' and userid!=null" >
        AND userid = #{userid,jdbcType=VARCHAR}
      </if>
      <if test="gameType!='' and gameType!=null" >
        AND gameType = #{gameType,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <resultMap id="UserHistoryMap" type="com.fr.lottery.dto.MemberReportDto">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="userId" jdbcType="VARCHAR" property="userId" />
    <result column="historyDate" jdbcType="VARCHAR" property="historyDate" />
    <result column="orderNum" jdbcType="VARCHAR" property="orderNum" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="totalAmount" jdbcType="VARCHAR" property="totalAmount" />
    <result column="winAmount" jdbcType="VARCHAR" property="winAmount" />
    <result column="canWinAmount" jdbcType="VARCHAR" property="canWinAmount" />
  </resultMap>

  <select id="getOrderHistory" resultMap="UserHistoryMap">
    SELECT handicap.id,od.userid,riqi as historyDate,COUNT(1) orderNum,sum(od.amount) amount,sum(od.canWinAmount) as canWinAmount
      ,sum(od.Amount) as totalAmount,sum(od.winAmount) as winAmount
    FROM orders
    INNER  JOIN orderdetail od on orders.id = od.orderId
    INNER  JOIN Handicap on orders.handicapId= Handicap.Id
      <where>
        <if test="userid!='' and userid!=null" >
          AND od.userid = #{userid,jdbcType=VARCHAR}
        </if>
        <if test="handicapId!='' and handicapId!=null" >
          AND od.handicapId = #{handicapId,jdbcType=VARCHAR}
        </if>
      </where>
      GROUP  BY od.userid,od.handicapId
    ORDER  BY QiShu desc

  </select>

</mapper>