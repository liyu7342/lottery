<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fr.lottery.dao.ReportMapper">
    <resultMap id="BaseResultMap" type="com.fr.lottery.entity.Orders">
        <id column="Id" jdbcType="VARCHAR" property="id"/>
        <result column="userId" jdbcType="VARCHAR" property="userid"/>
        <result column="handicapId" jdbcType="VARCHAR" property="handicapId"/>
        <result column="gameType" jdbcType="VARCHAR" property="gametype"/>
        <result column="no" jdbcType="VARCHAR" property="no"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="odds" jdbcType="DECIMAL" property="odds"/>
        <result column="retreat" jdbcType="DECIMAL" property="retreat"/>
        <result column="orderType" jdbcType="VARCHAR" property="orderType"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="winAmount" jdbcType="DECIMAL" property="winAmount"/>
        <result column="canWinAmount" jdbcType="DECIMAL" property="canWinAmount"/>
        <result column="totalAmount" jdbcType="INTEGER" property="totalAmount"/>
        <result column="createdate" jdbcType="TIMESTAMP" property="createdate"/>
        <result column="lianmatype" jdbcType="VARCHAR" property="lianmatype"/>
        <result column="lianmadan" jdbcType="VARCHAR" property="lianmadan"/>
        <result column="oddSet" jdbcType="DECIMAL" property="oddset"/>
        <result column="IsMuti" jdbcType="BIT" property="isMuti"/>
    </resultMap>
    <sql id="Base_Column_List">
    Id,  userId,handicapId, gameType, `no`,description, odds, amount,totalAmount,retreat,IFNULL(winAmount,0) as winAmount, createdate,status,orderNo,
    lianmatype,lianmadan,IFNULL(canWinAmount,0) as canWinAmount,oddset,orderType,IsMuti
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders

    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        where Id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where Id = #{id,jdbcType=VARCHAR}
  </delete>

    <insert id="insert" parameterType="com.fr.lottery.entity.Orders">
    insert into orders (Id,  userId,handicapId,orderType,
      gameType, no,description, odds,amount,totalAmount,retreat,winAmount, createdate,orderNo,lianmatype,lianmadan,canWinAmount,oddset
      ,IsMuti)
    values (#{id,jdbcType=VARCHAR},  #{userid,jdbcType=VARCHAR},#{handicapId,jdbcType=VARCHAR},#{orderType,jdbcType=VARCHAR},
      #{gametype,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR}, #{odds,jdbcType=DECIMAL},
      #{amount,jdbcType=INTEGER},#{totalAmount,jdbcType=INTEGER},#{retreat,jdbcType=DECIMAL},#{winAmount,jdbcType=DECIMAL}, #{createdate,jdbcType=TIMESTAMP},
      #{orderNo,jdbcType=VARCHAR},#{lianmatype,jdbcType=VARCHAR},#{lianmadan,jdbcType=VARCHAR},#{canWinAmount,jdbcType=DECIMAL},
      #{oddset,jdbcType=VARCHAR},#{isMuti,jdbcType=BIT})
  </insert>
    <select id="countByExample" resultType="java.lang.Long">
    select count(*) from orders

  </select>

    <update id="updateByPrimaryKey" parameterType="com.fr.lottery.entity.Orders">
    update orders
    set userId = #{userid,jdbcType=VARCHAR},
      handicapId=#{handicapId,jdbcType=VARCHAR},
      gameType = #{gametype,jdbcType=VARCHAR},
      description= #{description,jdbcType=VARCHAR},
      no = #{no,jdbcType=VARCHAR},
      odds = #{odds,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=INTEGER},
      totalAmount = #{totalAamount,jdbcType=INTEGER},
      retreat = #{retreat,jdbcType=DECIMAL},
      winAmount=#{winAmount,jdbcType=DECIMAL},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=VARCHAR}
  </update>

    <update id="updateWinAmountByPrimaryKey">
    UPDATE orders set winAmount=#{winAmount,jdbcType=DECIMAL} WHERE Id = #{id,jdbcType=VARCHAR}
  </update>

    <update id="settlement" statementType="CALLABLE">
      Call P_DB_Settlement1(#{p_handicapId,mode=IN,jdbcType=VARCHAR})
  </update>
    <select id="countByUserId" resultType="java.lang.Long">
        select count(1) from orders
        <where>
            <if test="handicapId!='' and handicapId!=null">
                AND handicapId = #{handicapId,jdbcType=VARCHAR}
            </if>
            <if test="userid!='' and userid!=null">
                AND userid = #{userid,jdbcType=VARCHAR}
            </if>
            <if test="gameType!='' and gameType!=null">
                AND gameType = #{gameType,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="getOrderDetails" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        <where>
            <if test="handicapId!='' and handicapId!=null">
                AND handicapId = #{handicapId,jdbcType=VARCHAR}
            </if>
            <if test="userid!='' and userid!=null">
                AND userid = #{userid,jdbcType=VARCHAR}
            </if>
            <if test="gameType!='' and gameType!=null">
                AND gameType = #{gameType,jdbcType=VARCHAR}
            </if>
        </where>

        order by orderNo DESC
        <if test="pageIndex!=null ">
            limit #{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>
    <select id="getTotal" resultMap="BaseResultMap">
        select sum(IFNULL(totalAmount,0)) as totalAmount,sum(IFNULL(canWinAmount,0)) as
        canWinAmount,sum(IFNULL(winAmount,0)) as winAmount
        from orders
        <where>
            <if test="handicapId!='' and handicapId!=null">
                AND handicapId = #{handicapId,jdbcType=VARCHAR}
            </if>
            <if test="userid!='' and userid!=null">
                AND userid = #{userid,jdbcType=VARCHAR}
            </if>
            <if test="gameType!='' and gameType!=null">
                AND gameType = #{gameType,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <resultMap id="UserHistoryMap" type="com.fr.lottery.dto.MemberReportDto">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="userId" jdbcType="VARCHAR" property="userId"/>
        <result column="historyDate" jdbcType="VARCHAR" property="historyDate"/>
        <result column="orderNum" jdbcType="VARCHAR" property="orderNum"/>
        <result column="amount" jdbcType="VARCHAR" property="amount"/>
        <result column="totalAmount" jdbcType="VARCHAR" property="totalAmount"/>
        <result column="winAmount" jdbcType="VARCHAR" property="winAmount"/>
        <result column="canWinAmount" jdbcType="VARCHAR" property="canWinAmount"/>
    </resultMap>

    <select id="getOrderHistory" resultMap="UserHistoryMap">
        SELECT handicap.id,od.userid,riqi as historyDate,COUNT(1) orderNum,sum(od.amount) amount,sum(od.canWinAmount) as
        canWinAmount
        ,sum(od.Amount) as totalAmount,sum(od.winAmount) as winAmount
        FROM orders
        INNER JOIN orderdetail od on orders.id = od.orderId
        INNER JOIN Handicap on orders.handicapId= Handicap.Id
        <where>
            <if test="userid!='' and userid!=null">
                AND od.userid = #{userid,jdbcType=VARCHAR}
            </if>
            <if test="handicapId!='' and handicapId!=null">
                AND od.handicapId = #{handicapId,jdbcType=VARCHAR}
            </if>
        </where>
        GROUP BY od.userid,od.handicapId
        ORDER BY riqi desc

    </select>

    <select id="getDailiReport" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.DailiReport">
    select '' id, dailiId ,handicapid,dailiid as memberId, CONCAT(dailiaccount,'.補') as memberaccount ,
    dailiname as memberName,1 AS isbucang,
    count(1) as orderNum,0 as amount ,0 as memberWinAmt,0 as memberRetreat,0 as memberAmt,
    -sum(totalAmount) as dailiAmt, 0 as dailiRetreat,
    0 as dailiWinAmt,
    0  AS ToZongdaiAmt,0 as ToZongdaiWinAmt
    from orders
    where orders.dailiId=#{p_userId,jdbcType=VARCHAR}
    AND  orders.userId=#{p_userId,jdbcType=VARCHAR}
    AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
    group by dailiId,dailiaccount,dailiname
    UNION
    select '' as id,orders.dailiId,handicapId,u.Id as memberid,u.account,u.userName
    ,0 AS isBucang,count(1) as orderNum,sum(totalAmount) as amount
    ,0 as winAmount,
    0 as retreat, 0 as memberActualAmt,
    sum(dailiamt) as zhancheng,0 as dailiretreat,
    0 as dailiwinamt,
   sum(totalamount -dailiamt) AS parentShareUp,0 as parentWinAmt
    from orders
    INNER JOIN user u on orders.userId = u.id
    where orders.dailiId=#{p_userId,jdbcType=VARCHAR}
    AND  orders.userId!=orders.dailiId
    AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
    group by u.id,u.account,u.userName
  </select>

    <select id="getDailiReportHasSettlement" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.DailiReport">
       select * from report_daili
       WHERE
       handicapid=#{p_handicapId,jdbcType=VARCHAR}
       and dailiid = #{p_userId,jdbcType=VARCHAR}
      order by isbucang desc
    </select>

    <select id="getZongDaiReport" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.ZongdaiReport">
  select  '' as id,zongdaiid ,handicapid,zongdaiid as dailiid,CONCAT(zongdaiaccount,'.補') as dailiaccount
    ,zongdainame as dailiName,1 AS isbucang,
    count(1) as orderNum,
    0 as membercount,
    0 as amount ,
    0 as winAmount,
    0 as retreatamt,
    0 as memberAmt,
    0 as dailiToZongdai,
    0 as dailiToZongdaiWinamt,
    -sum(totalamount) as zongdaiamt,
    0 as zongdairetreat,
    0 as zongdaiwinamt,
    0  AS gudongamt,0 as gudongwinamt
    from orders
    where orders.zongdaiid=#{p_userId,jdbcType=VARCHAR}
    AND  orders.userid=#{p_userId,jdbcType=VARCHAR}
    AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
    group by zongdaiid,zongdaiaccount,zongdainame
    UNION
   select '' as id, zongdaiid,handicapid, dailiId ,dailiaccount ,dailiname ,0 AS isBucang,
   count(1) as orderNum,
    count(DISTINCT (case when userId =dailiId then NULL  else userId END )) as membercount,
    sum(totalAmount) as amount,
    0 as winAmount,
    0 as retreatamt,
    0 as memberAmt,
    0 AS dailiToZongdai,
    0 as dailiToZongdaiWinamt,
    sum(zongdaiamt) AS zongdaiAmt,
    0 as zongdaiRetreat,
    0 AS zongdaiWinamt,
    0 as gudongamt,
    0 as gudongwinamt
    from orders
    where orders.zongdaiid=#{p_userId,jdbcType=VARCHAR}
    AND  orders.userId!=orders.zongdaiId
    AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
    group by dailiId,dailiaccount,dailiname
  </select>
    <select id="getZongDaiReportHasSettlement" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.ZongdaiReport">
         select * from report_zongdai
       WHERE
       handicapid=#{p_handicapId,jdbcType=VARCHAR}
       and zongdaiid = #{p_userId,jdbcType=VARCHAR}
      order by isbucang desc
    </select>
    <select id="getGudongReport" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.GudongReport">
   select '' as id, gudongId,gudongId as zongdaiId, CONCAT(gudongaccount,'.補') as zongdaiaccount ,gudongname as zongdainame,1 AS isbucang,
    count(1) as orderNum,
    0 as membercount,
    0 as amount ,
    0 as winAmount,
    0 as retreatamt,
    0 as memberamt,
    0 as dailitozongdai,
    0 as zongdaitogudong,
    -sum(totalAmount) as gudongamt,
    0 as gudongretreat,
    0 as gudongwinamt,
    0  AS dagudongamt,
    0 as dagudongWinAmt
    from orders
    where orders.zongdaiid=#{p_userId,jdbcType=VARCHAR}
    AND  orders.userid=#{p_userId,jdbcType=VARCHAR}
    AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
    group by gudongid,gudongaccount,gudongname
    UNION
      select '' as id,gudongid,zongdaiId ,zongdaiaccount ,zongdainame ,0 AS isBucang,
        count(1) as orderNum,
        count(DISTINCT (case when userId =dailiId or userId=zongdaiId  then NULL else userId END )) as membercount,
        sum(totalAmount) as amount,
        0 as winAmount,
        0 as retreatamt,
        0 as memberamt,
        0 as dailitozongdai,
        0 as zongdaitogudong,
        SUM(gudongamt) as zhancheng,
       0 as gudongretreat,
        0 as gudongwinamt,
        0  AS dagudongamt,
        0 as dagudongWinAmt
        from orders
        where orders.gudongid=#{p_userId,jdbcType=VARCHAR}
        AND  orders.userId!=#{p_userId,jdbcType=VARCHAR}
        AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
        group by zongdaiId,zongdaiaccount,zongdainame
    </select>

    <select id="getGudongReportHasSettlement" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.GudongReport">
       select * from report_gudong
        where gudongid=#{p_userId,jdbcType=VARCHAR}
        AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
        ORDER  BY  isbucang desc
    </select>

    <select id="getDagudongReport" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.DagudongReport">

        select '' as id,dagudongid,gudongid ,gudongaccount ,gudongname ,0 AS isBucang,
        count(1) as orderNum,
        count(DISTINCT (case when userId =dailiId or userId=zongdaiId  then NULL else userId END )) as membercount,
        sum(totalAmount) as amount,
        0 as winAmount,
        0 as retreatamt,
        0 as memberamt,
        0 as dailitozongdai,
        0 as zongdaitogudong,
        SUM(dagudongamt) as dagudongamt,
        0 as dagudongretreat,
        0 as dagudongwinamt,
        0  AS guanliyuanamt,
        0 as guanliyuanwinamt
        from orders
        where orders.dagudongid=#{p_userId,jdbcType=VARCHAR}
        AND  orders.userId!=#{p_userId,jdbcType=VARCHAR}
        AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
        group by gudongid,gudongaccount,gudongname
    </select>


    <select id="getDagudongReportHasSettlement" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.DagudongReport">
        select * from report_dagudong
        where dagudongid=#{p_userId,jdbcType=VARCHAR}
        AND handicapId=#{p_handicapId,jdbcType=VARCHAR}
        ORDER  BY  isbucang desc
    </select>

    <select id="getAdminReport" parameterType="com.fr.lottery.condition.StatisCondition"
            resultType="com.fr.lottery.entity.GudongReport">

        select dagudongid as id,dagudongaccount as account,dagudongname as UserName,0 AS isBucang,count(1) as orderNum,
        count(DISTINCT (case when userId =dailiId or userId=zongdaiId then NULL else userId END )) as membercount,
        sum(totalAmount) as amount,
        sum(case WHEN userId=dailiId THEN 0 WHEN userId=zongdaiId then 0  else  IFNULL(winAmount,0) END) as winAmount,
        sum(case WHEN userId=dailiId THEN 0 WHEN userId=zongdaiId then 0 else  retreatamt END ) as retreat,
        sum(case WHEN userId=dailiId THEN 0 WHEN userId=zongdaiId then 0 else  IFNULL(winAmount,0)+retreatamt END ) as memberActualAmt,
        sum(totalAmount- (case WHEN userId=zongdaiId then 0 WHEN userId=zongdaiId then 0 else  dailiamt end) ) AS zongdaiToParentShareUp,
        sum(-(IFNULL(winAmount,0))-(case WHEN userId=dailiId THEN 0 WHEN userId=zongdaiId then 0 ELSE(zongdaiRetreatAmt) +IFNULL(zongdaiwinamt,0) END)) as zongdaiToParentWinamt,
        SUM(gudongamt) as zhancheng,sum(IFNULL(gudongwinamt,0)) as gudongwinamt ,sum(gudongretreatAmt-zongdaiRetreatAmt) AS gudongretreatAmt,
        sum(totalAmount- (case WHEN userId=dailiId then 0 else  dailiamt end) -zongdaiamt) as parentShareUp,
        sum(-(IFNULL(winAmount,0))-(case WHEN userId=dailiId  THEN 0 WHEN userId=zongdaiId then 0 ELSE(zongdaiRetreatAmt) +IFNULL(zongdaiwinamt,0) END)
        -(IFNULL(zongdaiwinamt,0)+zongdairetreatAmt-dailiRetreatAmt)) parentWinamt
        from orders
        where  handicapId=#{p_handicapId,jdbcType=VARCHAR}
        group by dagudongid,dagudongaccount,dagudongname
    </select>



    <select id="getDailiReportMonth"  resultType="com.fr.lottery.dto.ReportMonthDto">
        SELECT handicapid,riqi,dailiid as userid,sum(orderNum) as orderNum,sum(amount) as amount,sum(memberamt) as memberWinamt,
          sum(dailiamt) as zhancheng,sum(dailiWinamt) as userWinamt,sum(dailiWinamt) as userTotalamt,sum(dailiretreat) as retreat,
          sum(dailiretreatDiff) as retreatDiff
           FROM report_daili where riqi BETWEEN #{riqi,jdbcType=VARCHAR} AND #{riqi2,jdbcType=VARCHAR} AND dailiid=#{userId,jdbcType=VARCHAR}
        GROUP BY handicapid,riqi
    </select>

    <select id="getZongdaiReportMonth"  resultType="com.fr.lottery.dto.ReportMonthDto">
        SELECT handicapid,riqi,zongdaiid as userid,sum(orderNum) as orderNum,sum(amount) as amount,sum(memberamt) as memberWinamt,
        sum(zongdaiamt) as zhancheng,sum(zongdaiWinamt) as userWinamt,sum(zongdaitotalamt) as userTotalamt,
        sum(zongdairetreatdiff) as retreatdiff,sum(zongdairetreat) as retreat
        FROM report_zongdai where riqi BETWEEN #{riqi,jdbcType=VARCHAR} AND #{riqi2,jdbcType=VARCHAR} AND zongdaiid=#{userId,jdbcType=VARCHAR}
        GROUP BY handicapid,riqi
    </select>

    <select id="getDGudongReportMonth"  resultType="com.fr.lottery.dto.ReportMonthDto">
        SELECT handicapid,riqi,gudongid as userid,sum(orderNum) as orderNum,sum(amount) as amount,sum(memberamt) as memberWinamt,
        sum(gudongamt) as zhancheng,sum(gudongwinamt) as userWinamt,sum(gudongtotalamt) as userTotalamt,
        sum(gudongretreatdiff) as retreatdiff,sum(gudongretreat) as retreat
        FROM report_gudong where riqi BETWEEN #{riqi,jdbcType=VARCHAR} AND #{riqi2,jdbcType=VARCHAR} AND gudongid=#{userId,jdbcType=VARCHAR}
        GROUP BY handicapid,riqi
    </select>

    <select id="getDagudongReportMonth"  resultType="com.fr.lottery.dto.ReportMonthDto">
        SELECT handicapid,riqi,dagudongid as userid,sum(orderNum) as orderNum,sum(amount) as amount,sum(memberamt) as memberWinamt,
        sum(dagudongamt) as zhancheng,sum(dagudongwinamt) as userWinamt,sum(dagudongtotalamt) as userTotalamt,
        sum(dagudongretreatdiff) as retreatdiff,sum(dagudongretreat) as retreat
        FROM report_dagudong where riqi BETWEEN #{riqi,jdbcType=VARCHAR} AND #{riqi2,jdbcType=VARCHAR} AND dagudongid=#{userId,jdbcType=VARCHAR}
        GROUP BY handicapid,riqi
    </select>

</mapper>